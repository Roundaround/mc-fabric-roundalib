plugins {
  id 'fabric-loom' version '0.12-SNAPSHOT'
  id 'maven-publish'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

import net.fabricmc.loom.task.RemapJarTask

def targetJavaVersion = 17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
  maven {
    name = "ModMenu"
    url = "https://maven.terraformersmc.com/releases/"
  }
}

configurations {
  shadow
  api.extendsFrom shadow
}

configurations.all {
	resolutionStrategy {
		failOnNonReproducibleResolution()
	}
}

sourceSets {
  testmod {
    compileClasspath += main.compileClasspath
    runtimeClasspath += main.runtimeClasspath
  }
}

dependencies {
  // To change the versions see the gradle.properties file
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

  // TODO: Implement custom keybind API and re-remove this dependency
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

  // ModMenu integration
  // Only necessary for test mod
  modCompileOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
  modRuntimeOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"

  shadow "com.electronwill.night-config:core:3.6.5"
  shadow "com.electronwill.night-config:toml:3.6.5"
}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }
}

java {
  sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
  targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
    
  withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
  it.options.encoding = "UTF-8"
  it.options.release.set(targetJavaVersion)
}

jar {
  from("LICENSE") {
    rename { "${it}_${archivesBaseName}"}
  }
}

shadowJar {
  dependsOn jar
  
  relocate 'com.electronwill.nightconfig', 'me.roundaround.roundalib.shadow.nightconfig'

  configurations = [project.configurations.shadow]
  classifier "shadow"
}

remapJar {
  dependsOn shadowJar
  input.set(shadowJar.archiveFile)
}

task shadowRemapJar(type: RemapJarTask) {
  dependsOn shadowJar

  input.set(shadowJar.archiveFile)
  archiveFileName = "${archivesBaseName}-${project.version}.jar"
  addNestedDependencies.set(true)
}

build {
  dependsOn shadowRemapJar
}

tasks.publish.dependsOn build

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId archivesBaseName
      version = project.mod_version + "+" + project.minecraft_version

      artifact(shadowRemapJar) {
        builtBy shadowRemapJar
      }
    }
  }

  repositories {
    maven {
      allowInsecureProtocol = true
      url = selfHostedMavenUrl + "/releases"
      credentials {
        username = selfHostedMavenUser
        password = selfHostedMavenPass
      }
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
}
